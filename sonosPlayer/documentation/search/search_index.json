{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Sonos for A.V.A.T.A.R!","text":"Control Your Music with Your Voice <p>SonosPlayer gives you the power to control your Sonos system and all your Sonos music with your voice.</p> <p>SonosPlayer supports all Sonos players, soundbars, and Sonos Roam as well as your 5.1 system (soundbar, Sub, and 2 players)</p> <p>It also allows you to redirect A.V.A.T.A.R's voice messages and all sounds played by the plugins to the Sonos clients.</p>"},{"location":"#multi-room","title":"Multi-room","text":"<p>The <code>sonosPlayer</code> plugin is fully multi-room; it automatically links A.V.A.T.A.R clients with the Sonos rooms.</p>"},{"location":"#multi-language","title":"Multi-language","text":"<p>The <code>sonosPlayer</code> plugin relies solely on the system's available languages.</p>"},{"location":"#supported-platforms","title":"Supported Platforms","text":"System Supported Comment Windows The most interesting platform for system voices and execution speed linux The most interesting platform for execution speed. Voices are generated by <code>espeak</code> and <code>mbrola</code> macOS System voices are available <p>Ready to get started? Follow the installation guide to integrate Sonos into A.V.A.T.A.R and unlock endless possibilities!</p>"},{"location":"Players-Sonos/","title":"Sonos Player","text":"<p>The connection between Sonos and A.V.A.T.A.R is automatic. The only thing to keep in mind is that the Sonos rooms in your system must have the same names as the A.V.A.T.A.R clients.</p> <p><code>sonosPlayer</code> plugin will then automatically link the A.V.A.T.A.R clients with the Sonos rooms.</p> <p>For example: For a Sonos room named \"Salon\", you must have an A.V.A.T.A.R client named \"Salon\".</p> <p></p> <p>Don't have an A.V.A.T.A.R client to associate with the Sonos Player? No worries, simply create a virtual client with the name of the Sonos Player.</p> <p></p>"},{"location":"Players-Sonos/#exception","title":"Exception","text":"<p>Some Players cannot be associated with an A.V.A.T.A.R client. For example, the Sonos Port</p> <p>To exclude a Player from the automatic recognition:</p> <ol> <li>Start the A.V.A.T.A.R server (if it is not already running)</li> <li>Open <code>Plugin Studio</code> and click on the <code>sonosPlayer</code> plugin</li> <li>Click on the <code>Properties</code> tab</li> <li> <p>Add the name of a Player to exclude in the table of the <code>ignoreDevices</code> property</p> <p>For example, <code>Platine</code> is a <code>Sonos Port</code> that should be excluded:</p> <p></p> </li> <li> <p>Add this Player name to exclude in the table of the <code>intercom.ignoreDevices</code> property so that this Player is not taken into account in the <code>intercom</code> command.</p> <p></p> </li> <li> <p>Save the settings</p> </li> <li>Restart the server</li> </ol> Important <p>A.V.A.T.A.R clients must be connected for the association to be recognized by A.V.A.T.A.R. If a client is not connected, you will receive an error message notifying you that A.V.A.T.A.R cannot find the associated client when you try to play music on that client.</p>"},{"location":"development/","title":"Development","text":""},{"location":"development/#avatarspeak","title":"<code>Avatar.speak</code>","text":"<p>The <code>Avatar.speak</code> function is automatically overridden. No action is necessary.</p>"},{"location":"development/#avatarplay","title":"<code>Avatar.play</code>","text":"<p>A music file can only be played on Sonos if it is included in a shared folder that is part of the music library.</p> <p>Therefore, if your plugin needs to play an audio file, you must create it in a shared folder with Sonos and then define the access format for this file in the <code>Avatar.play</code> function.</p>"},{"location":"development/#accessing-an-audio-file-in-the-shared-folder-sharedfolder","title":"Accessing an Audio File in the Shared Folder <code>sharedFolder</code>","text":"<p>You can use the shared folder defined in the <code>sharedFolder</code> property to allow Sonos access to your file.</p> <p>Format: <code>&lt;share&gt;@@&lt;folder/audio file&gt;</code></p> <p>For example:</p> <p>Suppose an audio file located at C:/avatarAudio/music/myMusic.mp3:</p> <ol> <li>The shared folder is C:/avatarAudio</li> <li>Add a folder C:/avatarAudio/music and create (or copy) your audio file into this folder.</li> <li>In the plugin, add the <code>Avatar.play</code> function as shown below:</li> </ol> <pre><code>const music = Config.modules.sonosPlayer.platform.win32.sharedFolder+'@@/music/myMusic.mp3';\nAvatar.play(music, client, \"before\");\n</code></pre> <p>The shared folder is defined by the <code>sharedFolder</code> property end = \"before\" to resume client listening before playing the file (optional; if not specified, the client's listening is resumed after playback)</p> <p>Another example:</p> <pre><code>const music = Config.modules.sonosPlayer.platform.win32.sharedFolder+'@@/music/myMusic.mp3';\nAvatar.play(music, client, () =&gt; {\n    // Do stuff\n});\n</code></pre> <p>The shared folder is defined by the <code>sharedFolder</code> property end = null, meaning the client's listening is resumed after playback callback is executed after the file has been played.</p> <p>Note:</p> <p>The shared folder <code>sharedFolder</code> is defined by default and is optional. To play this file, you can also define:</p> <pre><code>const music = '/music/myMusic.mp3';\nAvatar.play(music, client);\n</code></pre> <p>The shared folder is defined by default (the <code>sharedFolder</code> property) end = null, meaning the client's listening is resumed after playback</p>"},{"location":"development/#accessing-an-audio-file-in-another-shared-folder","title":"Accessing an Audio File in Another Shared Folder","text":"<p>You can also use a different shared folder than the <code>sharedFolder</code> property.</p> <p>Format: <code>share:&lt;pc_name_or_ip&gt;/&lt;share&gt;@@&lt;folder/audio file&gt;</code></p> <p>For example:</p> <p>Suppose an audio file is located at C:/musicLibrary/rock/myMusic.mp3:</p> <ol> <li>The PC name is AVATAR-SERVER</li> <li>The shared folder where the audio file is located is C:/musicLibrary</li> <li>In the plugin, add the <code>Avatar.play</code> function as shown below:</li> </ol> <pre><code>const music = 'share:AVATAR-SERVER/musicLibrary@@/rock/myMusic.mp3';\nAvatar.play(music, client, \"before\");\n</code></pre> <p>The shared folder is C:/musicLibrary on the AVATAR-SERVER end = \"before\" to resume client listening before playing the file (optional; if not specified, the client's listening is resumed after playback)</p>"},{"location":"development/#special-case-for-windows","title":"Special Case for Windows","text":"<p>If the drive letter is different from C:, you can specify it by adding it after the PC name in brackets, as shown below:</p> <pre><code>const music = 'share:AVATAR-SERVER[D:]/musicLibrary@@/rock/myMusic.mp3';\nAvatar.play(music, client);\n</code></pre> <p>The shared folder is /musicLibrary on the AVATAR-SERVER and on drive D: end = null, meaning the client's listening is resumed after playback</p>"},{"location":"development/#test-multi-room","title":"Test Multi-Room","text":"<p>When developing, it's good to test whether the client is using its own speaker or is configured to use a Sonos Player.</p> <p>To do this, you can use the <code>Avatar.Socket.isServerSpeak()</code> function as shown below:</p> <pre><code>if (!Avatar.Socket.isServerSpeak(client)) {\n    // The client has its own speaker\n\n    // sets static folder on the server\n    Avatar.static.set('C:/avatarAudio', () =&gt; {\n        const music = `http://${Config.http.ip}:${Config.http.port}/music/myMusic.mp3`;\n        Avatar.play(music, client, 'local', 'before', () =&gt; {\n            // do stuff if needed\n        });    \n    });\n} else {\n    // The client is using a Sonos Player\n    const music = Config.modules.sonosPlayer.platform.win32.sharedFolder+'@@/music/myMusic.mp3';\n    Avatar.play(music, client, 'before', () =&gt; {\n        // do stuff if needed\n    });\n}\n</code></pre>"},{"location":"parameters/","title":"Parameters","text":"<ol> <li>Start the A.V.A.T.A.R server (if it is not already running)</li> <li>Open <code>Plugin Studio</code> and click on the <code>sonosPlayer</code> plugin</li> <li>Click on the <code>Properties</code> tab</li> <li>Set the properties</li> <li>Save the settings</li> <li>Restart the server</li> </ol> Parameter Type Comment <code>ttsLanguage</code> string See Configure a voice <code>mappingOnServer</code> array Add in this table the clients for which the Add an association rule window will be displayed on the server instead of on the client. <code>showSystemVoices</code> boolean See Retrieve available voices <code>volumeUpDown</code> integer Used by the <code>volumeUp</code> and <code>volumeDown</code> commands.The volume increases or decreases by the value set in this parameter. <code>devTools</code> boolean Allows the Chrome devTools console to be displayed (Reserved for development) <code>Spotify.region</code> object Not used at the moment. <code>ignoreDevices</code> array See the exceptions <code>playerTV</code> string Used by the <code>activateTvSound</code> command.By default, the plugin sets the sound to the TV using the <code>Playbar</code> device, which is normally defined as the main device in a 5:1 system. If you do not have a 5:1 system, define in this property the device that should be used to output sound to the TV. <code>intercom.ignoreDevices</code> string This property indicates to the <code>intercom</code> command which devices to ignore. Also see the exceptions for more information. <code>platform</code> object See shared directories and voices for information on all associated parameters. <code>musicTypes.search</code> array Used by the <code>musicSearch</code> command.Defines in order all the search categories for music in your music library. You can modify the order and/or remove some.Possible categories: <code>composers</code>, <code>playlists</code>, <code>albums</code>, <code>albumArtists</code>, <code>artists</code>, <code>genres</code>, <code>tracks</code>.Note: The <code>sonos_playlists</code> category does not appear in this list but is the first one processed by the command.[ ] (empty): Only the <code>sonos_playlists</code> category is processed. <code>musicTypes.random</code> array Used by the <code>musicRandom</code> command when you perform a search via <code>musicSearch</code> and, when asked 'What would you like to listen to?', you reply 'as you wish'.Defines all the categories that can be used for a random music search. <code>mappingTTS</code> object You can add in this property all the plugin's predefined responses to music titles.For example:Suppose you search for a music title <code>mes pr\u00e9f\u00e9r\u00e9s</code> (a playlist). Normally, the plugin repeats the title to confirm the command. You can change what is said here. If you want the plugin to confirm the search by saying <code>Tes musiques pr\u00e9f\u00e9r\u00e9s</code> instead of <code>mes pr\u00e9f\u00e9r\u00e9s</code> (which is the actual title), add an array as shown below:.You can include several possible interpretations of the title by the plugin. <code>mappingRules</code> object In some cases, due to the title name as written in Sonos or your pronunciation, the search becomes very difficult for the plugin. By default, the plugin includes a search using Levenshtein distance (only in French and English) but it may not be sufficient.Add in this property all the predefined mappings for searching a music title.For example:Suppose you search for an artist <code>mike and the mechanics</code> and in Sonos, the artist is named <code>mike &amp; the mechanics</code>. Then add an array that groups all the comprehension variants as shown below:.Another example:Suppose you search for a title <code>hell is for children</code>; if your English is as poor as the best, the plugin will understand anything, so add an array that groups all the comprehension variants as shown below:.Note: The plugin offers you valuable assistance to automatically add a mapping array in this property (see Add a association for more details). <code>search.&lt;language&gt;</code> object Defines the fixed rules possible for the Music Search command.Important: You must absolutely add a section in the language used."},{"location":"shared-folder/","title":"Shared Folder","text":"<p>The shared folder is mandatory in order to redirect A.V.A.T.A.R dialogues and the plugin's music files to the Sonos players.</p>"},{"location":"shared-folder/#create-a-shared-folder","title":"Create a Shared Folder","text":"<ol> <li> <p>Create a directory that will be shared on the platform where the server is located. For example:</p> <p>Windows: C:/avatarAudio linux/macOS: $HOME/avatarAudio </p> </li> <li> <p>Open <code>Sonos Controller</code> then go to <code>Manage</code> and click on <code>Music Library Settings</code> </p> </li> <li> <p>Depending on your platform, add a music folder:</p> WindowsmacOSlinux <ol> <li>Click on <code>Another folder or a drive connected to my computer</code></li> <li>Select the shared directory created in step 1</li> </ol> <ol> <li>Click on <code>Network device (e.g. NAS drive)</code></li> <li> <p>Enter the full directory created in step 1</p> <p>For example: if $HOME is /users/avatar then the full directory is: /users/avatar/avatarAudio</p> Important <p>If an error message appears:</p> <ol> <li>Check if file sharing is enabled in MacOS settings -&gt; <code>General</code></li> <li>Check if Sonos has full disk access in MacOS settings -&gt; <code>Privacy and Security</code></li> <li>Verify the access rights of the shared directory (the rights must be 755)</li> </ol> </li> </ol> <ol> <li> <p>To share a directory on Linux, <code>samba</code> must be installed.</p> <ol> <li> <p>If <code>Samba</code> is not installed, install <code>Samba</code></p> <p>Open a terminal and update your packages:</p> <pre><code>sudo apt update\nsudo apt install samba    \n</code></pre> </li> <li> <p>Configure the share</p> <p>Edit the <code>Samba</code> configuration file:</p> <pre><code>sudo nano /etc/samba/smb.conf\n</code></pre> </li> <li> <p>Add a section for the shared directory at the end of the file:</p> <p>For example: if $HOME is /home/avatar then the full directory is: /home/avatar/avatarAudio</p> <pre><code>[Music]\npath = /path/to/your/shared-folder\nbrowseable = yes\nread only = yes\n</code></pre> </li> <li> <p>Add the user to <code>Samba</code> (your login or a special Sonos user) <pre><code>sudo smbpasswd -a username\n</code></pre>     This command will ask you to enter a password for the Samba user.</p> </li> <li>Restart the Samba service <pre><code>sudo systemctl restart smbd\n</code></pre></li> </ol> </li> <li> <p>In the <code>Sonos Controller</code>, click on <code>Network device (e.g. NAS drive)</code></p> </li> <li> <p>Enter the shared directory 'Music' declared in the <code>Samba</code> configuration</p> <p>In the form: \\\\&lt;linux_server_ip&gt;\\Music For example: \\\\192.168.2.25\\Music</p> Important <p>If an error message appears:</p> <ol> <li>Check the installation and configuration of <code>Samba</code></li> <li>Verify the access rights of the shared directory (the rights must be 755)</li> </ol> </li> </ol> </li> </ol>"},{"location":"shared-folder/#configure-the-sonosplayer-plugin-properties","title":"Configure the <code>sonosPlayer</code> Plugin Properties","text":"<p>You now need to add the shared directory created earlier to the plugin's properties.</p> <ol> <li>Start the A.V.A.T.A.R server (if it is not already running)</li> <li>Open <code>Plugin Studio</code> and click on the <code>sonosPlayer</code> plugin</li> <li>Click on the <code>Properties</code> tab</li> <li> <p>In the <code>platform</code> section, choose the platform corresponding to your installation:</p> <p>Windows: platform/win32 macOS: platform/darwin linux: platform/linux</p> </li> <li> <p>Complete the <code>sharedFolder</code> property:</p> <p>Enter the full path of the shared directory.  </p> <p>Windows: C:/avatarAudio macOS: /users/avatar/avatarAudio linux: /home/avatar/avatarAudio </p> </li> <li> <p>Complete the <code>partage</code> property:</p> <p>Enter the shared directory</p> <p>Windows: <code>&lt;pc_name&gt;/avatarAudio</code> macOS: <code>&lt;macOS_server_ip&gt;/avatarAudio</code> linux: <code>&lt;linux_server_ip&gt;/Music</code> Examples: </p> WindowsMacOSlinux <p></p> <p></p> <p></p> </li> <li> <p>Save the properties </p> </li> <li>Restart the A.V.A.T.A.R Server</li> </ol>"},{"location":"shared-folder/#configure-the-clients","title":"Configure the Clients","text":"<p>For each client for which dialogues are redirected to the <code>sonosPlayer</code> plugin, you must enable the setting in the client's properties.</p> <ol> <li>Start an A.V.A.T.A.R client (if it is not already running)</li> <li>Open the client's properties and click on the <code>Dialog</code> tab</li> <li>Check the box <code>Client dialogs are redirected to WI-FI speakers managed by a plugin</code></li> <li> <p>Enter <code>sonosPlayer</code> as the redirection plugin.</p> <p></p> </li> <li> <p>Save the properties.</p> </li> <li>Restart the client.</li> </ol> Note <p>Repeat the process for all clients whose dialogues you want to be redirected. The other clients will continue to use the speaker configured for the PC.</p> <p>You must now configure the possible voices for the plugin.</p>"},{"location":"user-guide/","title":"Usage","text":""},{"location":"user-guide/#search-for-a-music-or-radio","title":"Search for a Music or Radio","text":""},{"location":"user-guide/#a-music","title":"A Music","text":"<p>The rules to be spoken are defined in the <code>musicSearch</code> property; you can modify or add to them.</p> <p></p> English rule In the current language(e.g. French) Explanation music search Cherche de la musique The default rule. The music is played in the room that issued the rule. music search in &lt;a room&gt; Cherche de la musique dans le/la &lt;une pi\u00e8ce&gt; The music is played in the room specified in the rule. <p>For example: - music search =&gt; played in the current room - music search in the living room =&gt; played in the living room</p> <ol> <li>music search</li> <li>The plugin asks you, \"What would you like to listen to?\"</li> <li>Then, say the name of what you want to listen to.</li> <li>If the title exists, the plugin repeats its name (see the <code>musicTitleVoice</code> parameter) and plays it, and the command ends.</li> <li>If the title does not exist, the plugin informs you with, \"I'm sorry, I couldn't find what you're asking for.\" and returns to step 2, \"What would you like to listen to?\"</li> <li>Then, say another music name.</li> </ol>"},{"location":"user-guide/#a-radio","title":"A radio","text":"<p>The rules to be spoken are defined in the <code>radioSearch</code> property; you can modify or add to them.</p> <p></p> English rule In the current language(e.g. French) Explanation radio search Cherche une radio The default rule. The radio is played in the room that issued the rule. radio search in &lt;a room&gt; Cherche une radio dans le/la &lt;une pi\u00e8ce&gt; The radio is played in the room specified in the rule. <p>For example: - radio search =&gt; played in the current room - radio search in the living room =&gt; played in the living room</p> <ol> <li>radio search</li> <li>The plugin asks you, \"What would you like to listen to?\"</li> <li>Then, say the name of what you want to listen to.</li> <li>If the radio exists, the plugin repeats its name and plays it, and the command ends.</li> <li>If the radio does not exist, the plugin informs you with, \"I'm sorry, I couldn't find what you're asking for.\" and returns to step 2, \"What would you like to listen to?\"</li> <li>Then, say another music name.</li> </ol>"},{"location":"user-guide/#other-rules-in-the-search","title":"Other Rules in the Search","text":"<p>If no music or radio is found, the command returns to \"What would you like to listen to?\" You can then say another title or radio station (see above) or say:</p> <p>Note: The following rules are defined in the property search."},{"location":"user-guide/#finish-rule","title":"<code>finish</code> rule","text":"<p>Use this rule to stop the command.</p>"},{"location":"user-guide/#as-you-wish-rule","title":"<code>As you wish</code> rule","text":"<p>Only for music, the plugin randomly searches for a title in the library and plays it.</p> <p>Note: the command searches within the categories of the property musicTypes.random</p>"},{"location":"user-guide/#add-an-association-rule","title":"<code>Add an association</code> rule","text":"<p>This rule displays a dialog box that allows you to add an association between what you said and what the plugin should understand.</p> <p>Note: the fixed rules are defined in the property search. <p>For example: Suppose I search for an artist <code>B52's</code> (in French), the plugin understands <code>mets fifty toes.</code>. </p> <ol> <li> <p>After saying Add an Association, the window opens:</p> <p></p> </li> <li> <p>Then enter the new mapping in the \"What to record\" section.</p> <p>You can also choose an existing mapping from the <code>Existing mappings</code> list if <code>B52's</code> already exists.</p> <p></p> </li> <li> <p>Click on <code>save</code></p> </li> <li>Search again for the artist <code>B52's</code>.</li> </ol>"},{"location":"user-guide/#all-other-commands","title":"All Other Commands","text":"<p>Below are listed all the other possible commands.</p> <p>Some explanations for reading the table: </p> <ul> <li>The Rule by default column shows one of the rules defined in the Command column when the plugin is installed. You can add or modify them as you wish in the rules. property of the plugin. <li>Check the Multiroom column to see if you can provide a room name in the rule. For example, for the <code>previousMusic</code> command you can say:  <ul> <li>Previous music ==&gt; Plays the previous music in the current room</li> <li>Previous music in the living room ==&gt; Plays the previous music in the room specified in the rule</li> </ul> </li> English rule In the current language(e.g. French) Command Multiroom Explanation previous music musique pr\u00e9c\u00e9dente <code>previousMusic</code> Plays the previous music next music musique suivante <code>nextMusic</code> Plays the next music start the music d\u00e9marre la musique <code>musicPlay</code> Starts playback stop the music stop la musique <code>musicStop</code> Stops playback set the TV sound mets le son de la t\u00e9l\u00e9 <code>activateTvSound</code> Stops music playback (if necessary) and sets the TV sound (\"Playbar\" by default or the Player defined in the <code>playerTV</code> property) set the volume to &lt;value&gt; mets le son \u00e0 &lt;_value&gt; <code>setVolume</code> Sets the player's volume to the specified value lower the volume baisse le son <code>volumeDown</code> Lowers the player's volume by the value defined in the <code>volumeUpDown</code> property increase the volume monte le son <code>volumeUp</code> Increases the player's volume by the value defined in the <code>volumeUpDown</code> property unmute remet le son <code>muteOn</code> Reactivates the player's sound mute coupe le son <code>muteOff</code> Mutes the Player"},{"location":"voices/","title":"Redirecting Dialogues","text":"<p>When you redirect a client's dialogues to the sonosPlayer plugin, the voice settings you defined in the <code>Voices</code> tab of that client's properties are no longer used.</p> <p>The only configuration remaining active in this tab is the rule used to change voices. All other settings are configured in the sonosPlayer plugin properties.</p> <p></p>"},{"location":"voices/#configure-a-voice","title":"Configure a Voice","text":""},{"location":"voices/#set-the-language-used","title":"Set the Language Used","text":"<p>It is necessary to define the language code to set a default language when no voice is defined. The plugin will search for the first voice found in that language from the list of available system voices.</p> <ol> <li>Start the A.V.A.T.A.R server (if it is not already running)</li> <li>Open <code>Plugin Studio</code> and click on the <code>sonosPlayer</code> plugin</li> <li>Click on the <code>Properties</code> tab</li> <li> <p>Set the <code>ttsLanguage</code> property with the code of the language used. </p> <p>Example: For French: fr-FR For English: en-GB</p> </li> <li> <p>Save the settings</p> </li> <li>Restart the server</li> </ol> <p>Note: You can find the ISO language codes online, for example on this site</p>"},{"location":"voices/#retrieve-available-voices","title":"Retrieve Available Voices","text":"<p>The first step is to retrieve the voices available on your system:</p> <ol> <li>Start the A.V.A.T.A.R server (if it is not already running)</li> <li>Open <code>Plugin Studio</code> and click on the <code>sonosPlayer</code> plugin</li> <li>Click on the <code>Properties</code> tab</li> <li>Set the <code>showSystemVoices</code> property to <code>true</code></li> <li>Save the settings</li> <li>Restart the server</li> </ol> <p>Choose the tab corresponding to your platform to retrieve the available voices:</p> WindowsMacOSlinux <p>Open the console and note the voice(s) you want to use (located in the <code>name</code> field).</p> <p></p> <p>You can consult the file app/core/plugins/sonosPlayer/lib/simpletts/batchs/win32/BCP47.loc to look up the country code for a language.</p> <p>For example:</p> <ul> <li>For a French language (fr-FR), the country code is '40C' and in the screenshot, the voice is 'microsoft hortense desktop'</li> <li>For an English language (en-GB), the country code is '809' and in the screenshot, the voice is 'microsoft hazel desktop'</li> </ul> <p>Open the console and note the voice(s) you want to use (located in the <code>name</code> field).</p> <p></p> <p>For example:</p> <ul> <li>For a French language, the language is 'fr_FR' and in the screenshot, the voice is 'Eddy (Fran\u00e7ais (France))'</li> <li>For an English language, the country code is 'en_GB' and in the screenshot, the voice is 'Daniel'</li> </ul> <p>The Linux system is a special case. It doesn't have system language packs. Fortunately, we have an alternative voice system:</p> <ul> <li><code>espeak</code> is a multi-language speech synthesizer, which we'll use only for phonetic conversion.</li> <li><code>mbrola</code> is a multi-language voice synthesizer that offers improved rendering and can be coupled with espeak.</li> </ul> <p>If <code>espeak</code> and <code>mbrola</code> are not installed on the A.V.A.T.A.R server platform, follow steps 1 and 2 below. If <code>espeak</code> and <code>mbrola</code> are installed on the A.V.A.T.A.R server platform, follow only step 2.</p> <ol> <li>Consult the A.V.A.T.A.R documentation in the chapter Installing espeak and mbrola</li> <li>Then add <code>mbrola</code> voices by following the Installation chapter. Attention: The documentation is designed for installing voices on client platforms.     In the Configure mbrola voices section, you must absolutely modify the configuration file directory/resources/app/core/plugins/sonosPlayer/lib/simpletts/batch/linux/voices/voices.json of the <code>sonosPlayer</code> plugin by adding your <code>mbrola</code> voices, not the one defined in the documentation (e.g. directory/resources/app/core/lib/tts/linux/voices/voices.json)</li> </ol> <p>Then open the A.V.A.T.A.R console and note the voice(s) you want to use (located in the <code>name</code> field).</p> <p></p> <p>The voices are specific to <code>espeak</code> and <code>mbrola</code>. Both appear in the list, with <code>mbrola</code> voices (if installed) appearing first.</p> <p>For example:</p> <ul> <li>For a French language, the language is 'fr-FR' and in the screenshot, the voice is 'French female voice (mbrola)'</li> <li>For an English language, the country code is 'en-GB' and in the screenshot, the voice is 'english'</li> </ul> <p>You can then set the <code>showSystemVoices</code> property back to <code>false</code>.</p> Important <p>Try to solve the problem by reading the Possible errors and resolutions chapter of the A.V.A.T.A.R documentation.</p> <p>In some cases, even with the language pack installed, no voice may be available.  </p> <p>Once you've checked that everything's in order, and if the problem persists, it's not a bug in the application but a problem with the system's language pack. </p>"},{"location":"voices/#configure-the-voices","title":"Configure the Voices","text":"<p>After retrieving the available voices, the next step is to add them to the plugin's settings.</p> <ol> <li> <p>In the <code>platform</code> section, choose the platform corresponding to your installation:</p> <p>Windows: platform/win32 macOS: platform/darwin linux: platform/linux</p> </li> <li> <p>Choose the tab corresponding to your platform to configure the voices in the <code>voice</code> section:</p> WindowsMacOSlinux Parameter Type Value Mandatory Comment <code>current</code> string The name of the voice no The voice used for dialogues.Empty or 'by default': The first voice found among the system voices matching the <code>TTSLanguage</code> property. <code>active</code> array An array of possible voices no The voices used for changing voices when you use the <code>Change Voice</code> rule.[] or [\"by default\"]: The first voice found among the system voices matching the <code>TTSLanguage</code> property. <code>musicTitleVoice</code> string The name of the voice no When you select a music track or a radio station, you have the option for A.V.A.T.A.R to repeat the title using a different voice. For example, if you want the title to be pronounced with an English voice (with an English accent), choose an English voice name.Empty: The current voice is used. <code>speed</code> integer 52 &gt; <code>speed</code> &lt; 58: good speed0 &gt; speed &lt; 100 yes The speed of the voice used for dialogues (<code>current</code>). Parameter Type Value Mandatory Comment <code>current</code> string The name of the voice no The voice used for dialogues.Empty or 'by default': The first voice found among the system voices matching the <code>TTSLanguage</code> property. <code>active</code> array An array of possible voices no The voices used for changing voices when you use the <code>Change Voice</code> rule.[] or [\"by default\"]: The first voice found among the system voices matching the <code>TTSLanguage</code> property. <code>musicTitleVoice</code> string The name of the voice no When you select a music track or a radio station, you have the option for A.V.A.T.A.R to repeat the title using a different voice. For example, if you want the title to be pronounced with an English voice (with an English accent), choose an English voice name.Empty: The current voice is used. <code>speed</code> integer 45 &gt; <code>speed</code> &lt; 50: good speed0 &gt; speed &lt; 100 yes The speed of the voice used for dialogues (<code>current</code>). Parameter Type Value Mandatory Comment <code>current</code> string The name of the voice no The voice used for dialogues.Empty or 'by default': The first voice found among the system voices matching the <code>TTSLanguage</code> property. <code>active</code> array An array of possible voices no The voices used for changing voices when you use the <code>Change Voice</code> rule.[] or [\"by default\"]: The first voice found among the system voices matching the <code>TTSLanguage</code> property. <code>musicTitleVoice</code> string The name of the voice no When you select a music track or a radio station, you have the option for A.V.A.T.A.R to repeat the title using a different voice. For example, if you want the title to be pronounced with an English voice (with an English accent), choose an English voice name.Empty: The current voice is used. <code>speed</code> integer 45 &gt; <code>speed</code> &lt; 50: good speed0 &gt; speed &lt; 100 yes The speed of the voice used for dialogues (<code>current</code>). </li> </ol>"},{"location":"voices/#examples","title":"Examples","text":"<p>Examples of settings by platform</p> WindowsMacOSlinux <p></p> <p></p> <p></p>"},{"location":"voices/#other-parameters","title":"Other Parameters","text":""},{"location":"voices/#addduration","title":"<code>addDuration</code>","text":"<p>The length of the text to be played on the Sonos Player is normally that retrieved from the audio file. However, depending on the platform, network performance, or the speed at which Sonos processes the file, it may happen that the file's duration is not synchronized with the time Sonos takes to play it, causing it to be truncated during playback.</p> <p>If you notice that messages are regularly truncated, enter a value in seconds for this parameter in the section corresponding to your platform to extend the processing duration.</p>"},{"location":"voices/#common-parameters","title":"Common Parameters","text":"<p>The platform/common section groups all parameters common to all platforms</p> Parameter Type Value Mandatory Comment <code>defaultVolume</code> integer 0 &gt; <code>defaultVolume</code> &lt; 100 yes The default volume set before playback if the room is not defined in the <code>volume</code> parameter. The Player's volume is then restored to its previous position. <code>defaultDuration</code> integer In seconds yes The duration of the audio file if it could not be retrieved. <code>volume</code> object room : volume no The volume set before playback in the Sonos room.Example:.The Player's volume is then restored to its previous position."}]}